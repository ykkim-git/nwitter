{"version":3,"sources":["assets/loader.gif","components/Navigation.js","fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Navigation","userObj","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","edit","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","photoURL","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","loader","alt","position","top","left","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.355e7318.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.a2f56b88.gif\";","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <Link to=\"/\" style={{ marginRight: 10 }}>\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n      </Link>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}Ïùò Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC27xeDpoD52OVd6Llgc50CSOoP6qUqrB4\",\n  authDomain: \"nwitter-42769.firebaseapp.com\",\n  projectId: \"nwitter-42769\",\n  storageBucket: \"nwitter-42769.appspot.com\",\n  messagingSenderId: \"245751875169\",\n  appId: \"1:245751875169:web:068425adf723a03de54c20\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account -> ÏÑ±Í≥µ ÌõÑ Î∞îÎ°ú Î°úÍ∑∏Ïù∏\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // email login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // old newAccountÍ∞íÏùÑ Í∞ÄÏ†∏ÏôÄÏÑú span ÌÅ¥Î¶≠ Ïãú Î∞òÎåÄÍ∞íÏúºÎ°ú Î≥ÄÍ≤ΩÌïòÍ∏∞\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import {\n  faGithub, faGoogle, faTwitter\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\n\nconst Auth = () => {\n  // sosical login event\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [edit, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {edit ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your nweet\"\n                  value={newNweet}\n                  onChange={onChange}\n                  autoFocus\n                  required\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;\n","import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\"); // set nweet at DB\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    // file api\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearPhotoClick = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearPhotoClick}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]); // get nweet from DB\n\n  /** old get nweets */\n  /**\n  const getNweets = async () => {\n    const dbNweets = await dbService.collection(\"nweets\").get();\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      //set Ìï®ÏàòÏì∏Îïå Í∞í ÎåÄÏã†Ïóê Ìï®ÏàòÎ•º Ï†ÑÎã¨ÌïòÎ©¥ Î¶¨Ïï°Ìä∏Îäî Ïù¥Ï†ÑÍ∞íÏóê Ï†ëÍ∑ºÌï† Ïàò ÏûàÍ≤å ÎêúÎã§.\n      setNweets((prev) => [nweetObject, ...prev]);\n    });\n  };\n  */\n\n  useEffect(() => {\n    // getNweets();\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  // const getMyNweets = async () => {\n  //   const nweets = await dbService\n  //     .collection(\"nweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createdAt\")\n  //     .get();\n  // };\n  // useEffect(() => {\n  //   getMyNweets();\n  // }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n        photoURL: \"\",\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import Navigation from \"components/Navigation\";\nimport React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import loader from \"assets/loader.gif\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  \n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  \n  const loaderStyle = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        <img src={loader} alt=\"loader\" style={loaderStyle} />\n      )}\n    </>\n  );\n}\nexport default App;\n","import App from \"components/App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}