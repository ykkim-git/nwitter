[{"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/index.js":"1","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/App.js":"2","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Home.js":"3","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Router.js":"4","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Auth.js":"5","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/fbase.js":"6","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Navigation.js":"7","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Profile.js":"8","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Nweet.js":"9","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/NweetFactory.js":"10","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/AuthForm.js":"11"},{"size":226,"mtime":1611300323699,"results":"12","hashOfConfig":"13"},{"size":1211,"mtime":1611301590643,"results":"14","hashOfConfig":"13"},{"size":1391,"mtime":1611301153366,"results":"15","hashOfConfig":"13"},{"size":1187,"mtime":1611300035757,"results":"16","hashOfConfig":"13"},{"size":1337,"mtime":1611300128108,"results":"17","hashOfConfig":"13"},{"size":639,"mtime":1611214873678,"results":"18","hashOfConfig":"13"},{"size":1086,"mtime":1611299083113,"results":"19","hashOfConfig":"13"},{"size":1621,"mtime":1611301945146,"results":"20","hashOfConfig":"13"},{"size":2273,"mtime":1611299353754,"results":"21","hashOfConfig":"13"},{"size":2866,"mtime":1611299696983,"results":"22","hashOfConfig":"13"},{"size":2069,"mtime":1611298977579,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"yxrcm1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/index.js",[],["51","52"],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/App.js",[],["53","54"],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Home.js",["55","56"],"import { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport NweetFactory from \"components/NweetFactory\";\nimport Nweet from \"components/Nweet\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]); // get nweet from DB\n\n  /** old get nweets */\n  /**\n  const getNweets = async () => {\n    const dbNweets = await dbService.collection(\"nweets\").get();\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      //set 함수쓸때 값 대신에 함수를 전달하면 리액트는 이전값에 접근할 수 있게 된다.\n      setNweets((prev) => [nweetObject, ...prev]);\n    });\n  };\n  */\n\n  useEffect(() => {\n    // getNweets();\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Router.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Auth.js",["57","58"],"import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  // sosical login event\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/fbase.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Navigation.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Profile.js",["59"],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Nweet.js",["60"],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/NweetFactory.js",["61"],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/AuthForm.js",["62","63"],"import { authService } from \"fbase\";\nimport React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account -> 성공 후 바로 로그인\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // email login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // old newAccount값을 가져와서 span 클릭 시 반대값으로 변경하기\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n       {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":16,"nodeType":"72","messageId":"73","endLine":1,"endColumn":22},{"ruleId":"70","severity":1,"message":"74","line":2,"column":21,"nodeType":"72","messageId":"73","endLine":2,"endColumn":35},{"ruleId":"70","severity":1,"message":"75","line":3,"column":17,"nodeType":"72","messageId":"73","endLine":3,"endColumn":25},{"ruleId":"70","severity":1,"message":"76","line":25,"column":11,"nodeType":"72","messageId":"73","endLine":25,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":5,"column":1,"nodeType":"79","endLine":64,"endColumn":3},{"ruleId":"80","severity":1,"message":"81","line":59,"column":38,"nodeType":"82","endLine":59,"endColumn":74},{"ruleId":"80","severity":1,"message":"81","line":91,"column":11,"nodeType":"82","endLine":96,"endColumn":13},{"ruleId":"70","severity":1,"message":"83","line":5,"column":7,"nodeType":"72","messageId":"73","endLine":5,"endColumn":18},{"ruleId":"70","severity":1,"message":"76","line":34,"column":9,"nodeType":"72","messageId":"73","endLine":34,"endColumn":13},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"no-unused-vars","'uuidv4' is defined but never used.","Identifier","unusedVar","'storageService' is defined but never used.","'useState' is defined but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'inputStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]