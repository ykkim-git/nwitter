[{"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/index.js":"1","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/App.js":"2","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Home.js":"3","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Router.js":"4","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Auth.js":"5","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/fbase.js":"6"},{"size":208,"mtime":1611040634688,"results":"7","hashOfConfig":"8"},{"size":1123,"mtime":1611127176274,"results":"9","hashOfConfig":"8"},{"size":96,"mtime":1611127296979,"results":"10","hashOfConfig":"8"},{"size":556,"mtime":1611036197363,"results":"11","hashOfConfig":"8"},{"size":2457,"mtime":1611127839097,"results":"12","hashOfConfig":"8"},{"size":486,"mtime":1611127638470,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yxrcm1",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/index.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/App.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Home.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Router.js",["28"],"import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\n\nconst AppRouter = ({ isLoggedIn }) => {\n  return (\n    <Router>\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Auth.js",["29"],"import { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account -> 성공 후 바로 로그인\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // email login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // old newAccount값을 가져와서 span 클릭 시 반대값으로 변경하기\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  // sosical login event\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n      <div>\n        <button name=\"google\" onClick={onSocialClick}>\n          Continue with Google\n        </button>\n        <button name=\"github\" onClick={onSocialClick}>\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/fbase.js",[],{"ruleId":"30","severity":1,"message":"31","line":1,"column":17,"nodeType":"32","messageId":"33","endLine":1,"endColumn":25},{"ruleId":"30","severity":1,"message":"34","line":31,"column":9,"nodeType":"32","messageId":"33","endLine":31,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used."]