[{"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/index.js":"1","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/App.js":"2","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Home.js":"3","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Router.js":"4","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Auth.js":"5","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/fbase.js":"6","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Navigation.js":"7","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Profile.js":"8","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Nweet.js":"9"},{"size":206,"mtime":1611129407083,"results":"10","hashOfConfig":"11"},{"size":1282,"mtime":1611211660065,"results":"12","hashOfConfig":"11"},{"size":2736,"mtime":1611215005602,"results":"13","hashOfConfig":"11"},{"size":827,"mtime":1611159366745,"results":"14","hashOfConfig":"11"},{"size":2457,"mtime":1611127839097,"results":"15","hashOfConfig":"11"},{"size":639,"mtime":1611214873678,"results":"16","hashOfConfig":"11"},{"size":288,"mtime":1611129432763,"results":"17","hashOfConfig":"11"},{"size":398,"mtime":1611211060517,"results":"18","hashOfConfig":"11"},{"size":1675,"mtime":1611210731963,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yxrcm1",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/index.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/App.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Home.js",["40","41"],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Router.js",["42"],"import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Auth.js",["43"],"import { authService, firebaseInstance } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account -> 성공 후 바로 로그인\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // email login\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // old newAccount값을 가져와서 span 클릭 시 반대값으로 변경하기\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  // sosical login event\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n      <div>\n        <button name=\"google\" onClick={onSocialClick}>\n          Continue with Google\n        </button>\n        <button name=\"github\" onClick={onSocialClick}>\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/fbase.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Navigation.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/routes/Profile.js",[],"/Users/jay-youngkwon-kim/Desktop/dev/nwitter/src/components/Nweet.js",[],{"ruleId":"44","severity":1,"message":"45","line":1,"column":10,"nodeType":"46","messageId":"47","endLine":1,"endColumn":22},{"ruleId":"48","severity":1,"message":"49","line":88,"column":13,"nodeType":"50","endLine":88,"endColumn":64},{"ruleId":"44","severity":1,"message":"51","line":4,"column":3,"nodeType":"46","messageId":"47","endLine":4,"endColumn":11},{"ruleId":"44","severity":1,"message":"52","line":31,"column":9,"nodeType":"46","messageId":"47","endLine":31,"endColumn":13},"no-unused-vars","'findByTestId' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'data' is assigned a value but never used."]